name: Build And Push Kwik Nesta Worker Service Docker Image To Docker Hub

on:
  pull_request:
    branches:
      - master
    types:
      - closed

jobs:
  check_merge_condition:
    runs-on: ubuntu-latest
    steps:
      - name: Fail if not merged from development
        run: |
          echo "Merged: ${{ github.event.pull_request.merged }}"
          echo "Head ref: ${{ github.event.pull_request.head.ref }}"
          
          if [[ "${{ github.event.pull_request.merged }}" != "true" || "${{ github.event.pull_request.head.ref }}" != "develop" ]]; then
            echo "PR must be merged from 'develop' into 'master'"
            exit 1
          fi
        shell: bash

  build_and_push:
    needs: check_merge_condition
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get latest semver tag from Docker Hub
        id: get_latest_tag
        run: |
          tags=$(curl -s "https://hub.docker.com/v2/repositories/${{ secrets.HUB_USERNAME }}/kwik-nesta.workers.svc/tags?page_size=100" | jq -r '.results[].name')
          echo "All tags: $tags"

          latest_version=$(echo "$tags" | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n 1)
          echo "Latest version: $latest_version"

          if [ -z "$latest_version" ]; then
            next_version="v1.0.0"
          else
            version=${latest_version#v}
            IFS='.' read -r major minor patch <<< "$version"

            patch=$((patch + 1))

            if [ "$patch" -ge 10 ]; then
              patch=0
              minor=$((minor + 1))
            fi

            if [ "$minor" -ge 10 ]; then
              minor=0
              major=$((major + 1))
            fi

            next_version="v${major}.${minor}.${patch}"
          fi

          echo "Next version: $next_version"
          echo "tag=$next_version" >> $GITHUB_OUTPUT

      - name: Build Docker Image with version and live tags
        run: |
          docker build \
            --build-arg VERSION_TAG=${{ steps.get_latest_tag.outputs.tag }} \
            --build-arg BUILD_CONFIGURATION=Release \
            -t ${{ secrets.HUB_USERNAME }}/kwik-nesta.workers.svc:${{ steps.get_latest_tag.outputs.tag }} \
            -t ${{ secrets.HUB_USERNAME }}/kwik-nesta.workers.svc:live \
            -f src/KwikNestaIdentity.Svc.API/Dockerfile .

      - name: Push Docker Images to Docker Hub
        run: |
          docker login -u ${{ secrets.HUB_USERNAME }} -p ${{ secrets.HUB_RELEASE_SECRET }}
          docker push ${{ secrets.HUB_USERNAME }}/kwik-nesta.workers.svc:${{ steps.get_latest_tag.outputs.tag }}
          docker push ${{ secrets.HUB_USERNAME }}/kwik-nesta.workers.svc:live

      - name: Trigger Automatic Deploy on Render
        run: |
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}

      - name: Send Slack Notification
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          DEPLOYED_VERSION=${{ steps.get_latest_tag.outputs.tag }}
          curl -X POST -H 'Content-type: application/json' --data "{
            \"text\": \"ðŸš€ *Kwik Nesta Worker Deployed!*\nVersion: \`$DEPLOYED_VERSION\`\nTag: \`live\`\nEnvironment: *Production*\nRender triggered successfully.\"
          }" $SLACK_WEBHOOK_URL